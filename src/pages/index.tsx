import AboutMe from "@/components/AboutMe"
import PageTitle from "@/components/PageTitle"
import PortfolioCard from "@/components/PortfolioCard"
import PortfolioShowcase from "@/components/PortfolioShowcase"
import ServicesList from "@/components/ServicesList"
import StacksList from "@/components/StacksList"
import { PortfolioTypes } from "@/components/typings/types"
import { gql } from "@apollo/client"
import Head from "next/head"
import { GetServerSideProps } from "next/types"
import { useEffect, useState } from "react"
import client from "../../apolloClient"

export function useWindowSize() {
  const [windowSize, setWindowSize] = useState({
    width: 0,
    height: 0,
  })

  useEffect(() => {
    function handleResize() {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      })
    }

    window.addEventListener("resize", handleResize)

    handleResize()

    return () => window.removeEventListener("resize", handleResize)
  }, [])
  return windowSize
}

export default function Home({ portfolioShowcases }: PortfolioTypes) {
  const size = useWindowSize()

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AboutMe />
      <ServicesList />
      <PageTitle prefix="My" suffix="works." />
      <PortfolioShowcase>
        {portfolioShowcases.map((showcase) => (
          <PortfolioCard
            key={showcase.projectName}
            isOwner={showcase.isOwner}
            projectDescription={showcase.projectDescription}
            projectImages={showcase.projectImages}
            projectName={showcase.projectName}
            projectReleaseUrl={showcase.projectReleaseUrl}
            projectRepoUrl={showcase.projectRepoUrl}
            windowSize={size.width}
            stackList={showcase.stackList}
          />
        ))}
        {portfolioShowcases.map((showcase) => (
          <PortfolioCard
            key={showcase.projectName}
            isOwner={showcase.isOwner}
            projectDescription={showcase.projectDescription}
            projectImages={showcase.projectImages}
            projectName={showcase.projectName}
            projectReleaseUrl={showcase.projectReleaseUrl}
            projectRepoUrl={showcase.projectRepoUrl}
            windowSize={size.width}
            stackList={showcase.stackList}
          />
        ))}
      </PortfolioShowcase>
      <StacksList />
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const getPortfolioCases = gql`
    query PortfolioQuery {
      portfolioShowcases(last: 3) {
        id
        projectName
        isOwner
        projectReleaseUrl
        projectRepoUrl
        projectDescription {
          text
        }
        projectImages {
          desktopImage {
            url
          }
          mobileImage {
            url
          }
        }
        stackList {
          url
        }
      }
    }
  `

  const { data } = await client.query({
    query: getPortfolioCases,
  })

  return {
    props: data,
  }
}
